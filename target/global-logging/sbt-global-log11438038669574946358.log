[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\YueChen\AppData\Local\Temp\idea3.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\YueChen\AppData\Local\Temp\idea3.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Oracle Corporation Java 12.0.2)
[debug]       Load.loadUnit: plugins took 263.1995ms
[debug]       Load.loadUnit: defsScala took 0.3673ms
[debug] [Loading] Scanning directory C:\Users\YueChen\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\YueChen\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 45.6406 ms
[debug]           Load.resolveProject(global-plugins) took 186.1893ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\YueChen\.sbt\1.0\plugins, plugins: List(<none>))) took 313.3297ms
[debug] [Loading] Done in C:\Users\YueChen\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 364.5827ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.8385ms
[debug]     Load.loadUnit(file:/C:/Users/YueChen/.sbt/1.0/plugins/, ...) took 652.7358ms
[debug]   Load.apply: load took 1072.4423ms
[debug]   Load.apply: resolveProjects took 11.6825ms
[debug]   Load.apply: finalTransforms took 128.1932ms
[debug]   Load.apply: config.delegates took 14.938ms
[debug]   Load.apply: Def.make(settings)... took 1687.913ms
[debug]   Load.apply: structureIndex took 468.7194ms
[debug]   Load.apply: mkStreams took 2.4132ms
[info] loading global plugins from C:\Users\YueChen\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6461.3063ms
[debug]           Load.loadUnit: plugins took 41.5369ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Documents\study\chisel-riscv\chisel-project\riscv-chip\project
[debug]             Load.loadUnit: mkEval took 8.5159ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Documents\study\chisel-riscv\chisel-project\riscv-chip\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8193 ms
[info] loading settings for project riscv-chip-build from plugins.sbt,idea3.sbt ...
[debug]               Load.resolveProject(riscv-chip-build) took 17.2526ms
[debug]             Load.loadTransitive: finalizeProject(Project(id riscv-chip-build, base: C:\Documents\study\chisel-riscv\chisel-project\riscv-chip\project, plugins: List(<none>))) took 21.707ms
[debug] [Loading] Done in C:\Documents\study\chisel-riscv\chisel-project\riscv-chip\project, returning: (riscv-chip-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3717.9027ms
[debug]           Load.loadUnit: cleanEvalClasses took 18.0879ms
[debug]         Load.loadUnit(file:/C:/Documents/study/chisel-riscv/chisel-project/riscv-chip/project/, ...) took 3779.785ms
[debug]       Load.apply: load took 3782.2733ms
[debug]       Load.apply: resolveProjects took 0.1635ms
[debug]       Load.apply: finalTransforms took 24.7091ms
[debug]       Load.apply: config.delegates took 0.5786ms
[debug]       Load.apply: Def.make(settings)... took 261.0576ms
[debug]       Load.apply: structureIndex took 71.9354ms
[debug]       Load.apply: mkStreams took 0.0041ms
[info] loading project definition from C:\Documents\study\chisel-riscv\chisel-project\riscv-chip\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6588.7444ms
[debug]     Load.loadUnit: defsScala took 0.0073ms
[debug] [Loading] Scanning directory C:\Documents\study\chisel-riscv\chisel-project\riscv-chip
[debug]       Load.loadUnit: mkEval took 0.4843ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1568 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 46.78ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Documents\study\chisel-riscv\chisel-project\riscv-chip, plugins: List(<none>))) took 53.7171ms
[debug] [Loading] Done in C:\Documents\study\chisel-riscv\chisel-project\riscv-chip, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2443.3793ms
[debug]     Load.loadUnit: cleanEvalClasses took 43.1201ms
[debug]   Load.loadUnit(file:/C:/Documents/study/chisel-riscv/chisel-project/riscv-chip/, ...) took 9076.6433ms
[debug] Load.apply: load took 9080.2611ms
[debug] Load.apply: resolveProjects took 0.2259ms
[debug] Load.apply: finalTransforms took 93.3093ms
[debug] Load.apply: config.delegates took 0.6641ms
[debug] Load.apply: Def.make(settings)... took 126.3361ms
[debug] Load.apply: structureIndex took 38.2293ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to riscv-chip (in build file:/C:/Documents/study/chisel-riscv/chisel-project/riscv-chip/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 7782 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 7782, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to riscv-chip (in build file:/C:/Documents/study/chisel-riscv/chisel-project/riscv-chip/)
[debug] > Exec(idea-shell, None, None)
